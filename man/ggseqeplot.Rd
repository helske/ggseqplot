% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggseqeplot.R
\name{ggseqeplot}
\alias{ggseqeplot}
\title{Sequence Entropy Plot}
\usage{
ggseqeplot(
  seqdata,
  group = NULL,
  weighted = TRUE,
  with.missing = FALSE,
  linewidth = 1
)
}
\arguments{
\item{seqdata}{State sequence object (class \code{stslist}) created with the \code{\link[TraMineR:seqdef]{TraMineR::seqdef}} function.}

\item{group}{If grouping variable is specified plot shows one line for each group}

\item{weighted}{Controls if weights (specified in \\code{\\link[TraMineR:seqdef]{TraMineR::seqdef}}) should be used. Default is \code{TRUE}, i.e. if available weights are used}

\item{with.missing}{Specifies if missing states should be considered when computing the entropy index (default is \code{FALSE}).}

\item{linewidth}{Specifies the with of the entropy line; default is \code{1}}
}
\value{
A line plot of entropy values at each sequence position. If stored as object the resulting list
object also contains the data (long format) used for rendering the plot
}
\description{
Function for plotting the development of cross-sectional entropies across sequence positions with \code{\link[ggplot2]{ggplot2}} instead of base
R's \code{\link[base]{plot}} function that is used by \code{\link[TraMineR:seqplot]{TraMineR::seqplot}}. Other than in \code{\link[TraMineR:seqHtplot]{TraMineR::seqHtplot}} group-specific entropy
lines are displayed in a common plot (just like in \code{\link[TraMineRextras:seqplot.tentrop]{TraMineRextras::seqplot.tentrop}}.
}
\details{
The function uses \code{\link[TraMineR:seqstatd]{TraMineR::seqstatd}} to compute entropies. Obviously this requires that the
input data (\code{seqdata}) is stored as state sequence object (class \code{stslist}) created with the \code{\link[TraMineR:seqdef]{TraMineR::seqdef}} function.
}
\examples{
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Examples from TraMineR::seqplot

library(TraMineR)
library(ggplot2)

# actcal data set
data(actcal)

# We use only a sample of 300 cases
set.seed(1)
actcal <- actcal[sample(nrow(actcal),300),]
actcal.lab <- c("> 37 hours", "19-36 hours", "1-18 hours", "no work")
actcal.seq <- seqdef(actcal,13:24,labels=actcal.lab)

# ex1 using weights
data(ex1)
ex1.seq <- seqdef(ex1, 1:13, weights=ex1$weights)

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


# sequences sorted by age in 2000 and grouped by sex
# with TraMineR::seqplot (entropies shown in two separate plots)
seqHtplot(actcal.seq, group=actcal$sex)
# with ggseqplot (entropies shown in one plot)
ggseqeplot(actcal.seq, group=actcal$sex)

# sequences of unequal length with missing state, and weights
seqHtplot(ex1.seq)
ggseqeplot(ex1.seq)

}
