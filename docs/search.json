[{"path":"https://maraab23.github.io/ggseqplot/articles/seq-summarization-plots.html","id":"setup-example","dir":"Articles","previous_headings":"","what":"Setup example","title":"Sequence Summarization Plots","text":"","code":"library(ggseqplot) library(TraMineR) library(ggplot2)"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://maraab23.github.io/ggseqplot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marcel Raab. Author, maintainer.","code":""},{"path":"https://maraab23.github.io/ggseqplot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Raab M (2022). ggseqplot: Render Sequence Plots using ggplot2. R package version 0.6.0, https://github.com/maraab23/ggseqplot.","code":"@Manual{,   title = {ggseqplot: Render Sequence Plots using ggplot2},   author = {Marcel Raab},   year = {2022},   note = {R package version 0.6.0},   url = {https://github.com/maraab23/ggseqplot}, }"},{"path":"https://maraab23.github.io/ggseqplot/CopyOfREADME.html","id":null,"dir":"","previous_headings":"","what":"ggseqplot: ggplotify sequence data plots\r\r\n","title":"ggseqplot: ggplotify sequence data plots\r\r\n","text":"Status main goal ggseqplot provide functions reproduce sequence plots TraMineR’s seqplot using ggplot2. plots produced basis sequence object defined TraMineR::seqdef. package automates reshaping plotting sequence data. package literally builds excellent work {TraMiner}, TraMineRextras, {ggplot2} developers uses several functions produce {ggplot2}-flavored figures. development library early stage hopefully complemented additional functions near future. Currently, ggseqplot contains four functions: ggseqiplot (ggplot2 version TraMineR::seqIplot) ggseqdplot (ggplot2 version TraMineR::seqdplot) ggseqeplot (ggplot2 version TraMineR::seqHtplot) ggseqrfplot (ggplot2 version TraMineRextras::seqplot.rf) preferences plot types added, create issue github send email.","code":""},{"path":"https://maraab23.github.io/ggseqplot/CopyOfREADME.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ggseqplot: ggplotify sequence data plots\r\r\n","text":"can install early version ggseqplot typing:","code":"devtools::install_github(\"maraab23/ggseqplot\")"},{"path":"https://maraab23.github.io/ggseqplot/CopyOfREADME.html","id":"setup-for-examples","dir":"","previous_headings":"","what":"Setup for examples","title":"ggseqplot: ggplotify sequence data plots\r\r\n","text":"start defining sequence objects TraMineR::seqdef using code example section documentation. following sections use sequence objects render “” sequence plots TraMineR::seqplot corresponding ggseqplot functions using specification plot width height (7x5 inches).","code":"library(TraMineR) library(TraMineRextras) library(ggseqplot) library(ggplot2) library(patchwork)  # Examples from TraMineR data(actcal) data(biofam)  # We use only a samples of 1000 cases set.seed(1) actcal <- actcal[sample(nrow(actcal),1000),] actcal.lab <- c(\"> 37 hours\", \"19-36 hours\", \"1-18 hours\", \"no work\") actcal.seq <- seqdef(actcal,13:24,labels=actcal.lab)  set.seed(1) biofam <- biofam[sample(nrow(biofam),1000),] biofam.lab <- c(\"Parent\", \"Left\", \"Married\", \"Left+Marr\",                 \"Child\", \"Left+Child\", \"Left+Marr+Child\", \"Divorced\") biofam.seq <- seqdef(biofam, 10:25, labels=biofam.lab)   # ex1 using weights data(ex1) ex1.seq <- seqdef(ex1, 1:13, weights=ex1$weights)"},{"path":"https://maraab23.github.io/ggseqplot/CopyOfREADME.html","id":"sequence-index-plot","dir":"","previous_headings":"","what":"Sequence index plot","title":"ggseqplot: ggplotify sequence data plots\r\r\n","text":"start sequence plot 1000 sequences grouped sex. Grouping ggseqplot-functions achieved via ggplot2::facet_wrap.   Note recommend abstain using regular sequence index plots rendering 300-500 sequences well-known issue overplotting. code just replicates example seqplot documentation. real world applications recommend rather render subsample sequences use relative frequency index plots. second example renders sequences unequal length missing state, weights. default behavior ggseqplot identical seqplot: weights specified defining sequence object seqdef, automatically used. sequences contain missing states automatically added alphabet also plotted.   course, possible change default behavior using well-known arguments TraMineR’s seqplot function. following example ignore weights add add borders around sequence position:   haven’t notice differences aspect ratio used seqplot {ggseqplot} earlier, probably done now. Whereas little boxes displayed rectangles landscape mode TraMineR’s seqIplot appear rectangles portrait mode using ggseqiplot. Within world ggplot2 multiple options mimic behavior seqplot, instance specifying height width arguments saving figure ggsave:","code":"# with TraMineR::seqIplot seqIplot(actcal.seq, group=actcal$sex,sortv=actcal$age00) # with ggseqplot::ggseqiplot ggseqiplot(actcal.seq, group=actcal$sex, sortv=actcal$age00) # with TraMineR::seqIplot seqIplot(ex1.seq) # with ggseqplot::ggseqiplot ggseqiplot(ex1.seq) # with TraMineR::seqIplot seqIplot(ex1.seq, weighted = FALSE, border = TRUE) # with ggseqplot::ggseqiplot ggseqiplot(ex1.seq, weighted = FALSE, border = TRUE) ggsave(\"test.png\", width = 10, height = 4)"},{"path":"https://maraab23.github.io/ggseqplot/CopyOfREADME.html","id":"relative-frequency-sequence-plot","dir":"","previous_headings":"","what":"Relative frequency sequence plot","title":"ggseqplot: ggplotify sequence data plots\r\r\n","text":"following examples divide sample 1000 sequences 20 frequency group display resulting relative frequency sequence plots. first compute dissimilarity matrix:","code":"diss <- seqdist(biofam.seq, method=\"LCS\") #>  [>] 1000 sequences with 8 distinct states #>  [>] creating a 'sm' with a substitution cost of 2 #>  [>] creating 8x8 substitution-cost matrix using 2 as constant value #>  [>] 356 distinct  sequences #>  [>] min/max sequence lengths: 16/16 #>  [>] computing distances using the LCS metric #>  [>] elapsed time: 0.07 secs # with TraMineRextras::seqplot.rf seqplot.rf(biofam.seq, diss = diss, k = 20) #>  [>] Using k=20 frequency groups #>  [>] Pseudo/median-based-R2: 0.5319843 #>  [>] Pseudo/median-based-F statistic: 58.62879 # with ggseqplot::ggseqdplot ggseqrfplot(biofam.seq, diss = diss, k = 20) #>  [>] Using k=20 frequency groups #>  [>] Pseudo/median-based-R2: 0.5319843 #>  [>] Pseudo/median-based-F statistic: 58.62879"},{"path":"https://maraab23.github.io/ggseqplot/CopyOfREADME.html","id":"sequence-distribution-plot","dir":"","previous_headings":"","what":"Sequence distribution plot","title":"ggseqplot: ggplotify sequence data plots\r\r\n","text":"following examples show plots grouped sex, time presenting state distributions.","code":"# with TraMineR::seqdplot seqdplot(actcal.seq, group=actcal$sex) # with ggseqplot::ggseqdplot ggseqdplot(actcal.seq, group=actcal$sex)"},{"path":"https://maraab23.github.io/ggseqplot/CopyOfREADME.html","id":"plot-of-development-of-cross-sectional-entropies","dir":"","previous_headings":"","what":"Plot of development of cross-sectional entropies","title":"ggseqplot: ggplotify sequence data plots\r\r\n","text":"Like previous examples, illustrate group argument {TraMiner} ggseqplot. Just figures shown TraMineR::seqHtplot produces separate plot group. ggseqeplot behaves differently shows group-specific entropy line common plot thus resembles new TraMineRextras function seqplot.tentrop.","code":"# with TraMineR::seqHtplot seqHtplot(actcal.seq, group=actcal$sex) # with ggseqplot::ggseqeplot ggseqeplot(actcal.seq, group=actcal$sex)"},{"path":"https://maraab23.github.io/ggseqplot/CopyOfREADME.html","id":"using-ggplot2-functions-and-its-friends-to-adjust-figures","dir":"","previous_headings":"","what":"Using {ggplot2} functions and its friends to adjust figures","title":"ggseqplot: ggplotify sequence data plots\r\r\n","text":"Rendering figures using ggplot2 ggseqplot plots can easily manipulated functions usually used adjust ggplot2 output. also can utilize libraries designed used together ggplot2:","code":"library(ggplot2) library(ggthemes) library(hrbrthemes)  ggseqdplot(actcal.seq) +   colorspace::scale_fill_discrete_sequential(\"heat\") +   scale_x_discrete(labels = month.abb) +   labs(title = \"State distribution plot\",        x = \"Month\") +   guides(fill=guide_legend(title=\"Alphabet\")) +   hrbrthemes::theme_ipsum_rc() +   theme(plot.title = element_text(size = 30,                                    margin=margin(0,0,20,0)),         plot.title.position = \"plot\")"},{"path":"https://maraab23.github.io/ggseqplot/index.html","id":"ggseqplot-ggplotify-sequence-data-plots-","dir":"","previous_headings":"","what":"Render Sequence Plots using ggplot2","title":"Render Sequence Plots using ggplot2","text":"main goal ggseqplot provide functions reproduce sequence plots {TraMineR}’s seqplot using {ggplot2}. plots produced basis sequence object defined TraMineR::seqdef. package automates reshaping plotting sequence data. package literally builds excellent work {TraMineR}, {TraMineRExtras}, {ggplot2} developers uses several functions produce ggplot2-flavored figures. Note, library written personally dislike plots produced {TraMineR}, rather normally using {TraMineR} instead base R’s plot environment visualizing data. {TraMineR} developed {ggplot2} popular today back many users familiar coding base R plots. date, however, many researchers students accustomed using {ggplot2} prefer draw related skills experiences instead learning refine base R plots just single purpose visualizing sequence data. development library early stage hopefully complemented additional functions near future. Currently, ggseqplot contains five functions: ggseqdplot (equivalent TraMineR::seqdplot) ggseqeplot (equivalent TraMineRextras::seqplot.tentrop) ggstrqeplot (based transitions rates computed TraMineR::seqtrate) ggseqiplot (equivalent TraMineR::seqIplot) ggseqrfplot (equivalent TraMineRextras::seqplot.rf) documentation (including vignettes) still much work progress. working , likely existing functions slightly revised extended. preferences plot types added, create issue github send email. Two vignettes outlines ggseqplot reshapes sequence data generated TraMineR::seqdef visualize using {ggplot2}. compare resulting plots produced {TraMineR} illustrate adjust baseline output using familiar {ggplot2} functions (add ons).","code":""},{"path":"https://maraab23.github.io/ggseqplot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Render Sequence Plots using ggplot2","text":"can install ggseqplot typing:","code":"devtools::install_github(\"maraab23/ggseqplot\")"},{"path":"https://maraab23.github.io/ggseqplot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Marcel Raab Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqdplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence Distribution Plot — ggseqdplot","title":"Sequence Distribution Plot — ggseqdplot","text":"Function rendering state distribution plots ggplot2 instead base R's plot function used TraMineR::seqplot.","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqdplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence Distribution Plot — ggseqdplot","text":"","code":"ggseqdplot(   seqdata,   group = NULL,   weighted = TRUE,   with.missing = FALSE,   border = TRUE,   with.entropy = FALSE,   linetype = \"dashed\",   linecolor = \"black\",   linewidth = 1 )"},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqdplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence Distribution Plot — ggseqdplot","text":"seqdata State sequence object (class stslist) created TraMineR::seqdef function. group Grouping variable length equal number sequences. NULL, distinct plot generated level group. weighted Controls weights (specified TraMineR::seqdef) used. Default TRUE, .e. available weights used .missing Specifies missing states considered computing state distributions (default FALSE). border TRUE (default) bars plotted black outline .entropy add line plot cross-sectional entropies sequence position linetype linetype entropy subplot (.entropy==TRUE) can specified integer (0-6) name (0 = blank, 1 = solid, 2 = dashed, 3 = dotted, 4 = dotdash, 5 = longdash, 6 = twodash); ; default \"dashed\" linecolor Specifies color entropy line .entropy==TRUE; default \"black\" linewidth Specifies entropy line .entropy==TRUE; default 1","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqdplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequence Distribution Plot — ggseqdplot","text":"sequence distribution plot. stored object resulting list object also contains data (long format) used rendering plot","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqdplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequence Distribution Plot — ggseqdplot","text":"function uses TraMineR::seqstatd obtain state distributions. Obviously requires input data (seqdata) stored state sequence object (class stslist) created TraMineR::seqdef function.","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqdplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence Distribution Plot — ggseqdplot","text":"","code":"# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  # Examples from TraMineR::seqplot  library(TraMineR) #>  #> TraMineR stable version 2.2-3 (Built: 2022-03-25) #> Website: http://traminer.unige.ch #> Please type 'citation(\"TraMineR\")' for citation information. library(ggplot2)  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  # Examples from TraMineR::seqplot  # actcal data set data(actcal)  # We use only a sample of 300 cases set.seed(1) actcal <- actcal[sample(nrow(actcal),300),] actcal.lab <- c(\"> 37 hours\", \"19-36 hours\", \"1-18 hours\", \"no work\") actcal.seq <- seqdef(actcal,13:24,labels=actcal.lab) #>  [>] 4 distinct states appear in the data:  #>      1 = A #>      2 = B #>      3 = C #>      4 = D #>  [>] state coding: #>        [alphabet]  [label]  [long label]  #>      1  A           A        > 37 hours #>      2  B           B        19-36 hours #>      3  C           C        1-18 hours #>      4  D           D        no work #>  [>] 300 sequences in the data set #>  [>] min/max sequence length: 12/12  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  # state distribution plots; grouped by sex # with TraMineR::seqplot seqdplot(actcal.seq, group=actcal$sex)  # with ggseqplot ggseqdplot(actcal.seq, group=actcal$sex)  # with ggseqplot and weights turned off ggseqdplot(actcal.seq, group=actcal$sex, weighted = FALSE)   # make use of ggplot functions for modifying the plot ggseqdplot(actcal.seq) +   scale_x_discrete(labels = month.abb) +   labs(title = \"State distribution plot\",        x = \"Month\") +   guides(fill=guide_legend(title=\"Alphabet\")) +   theme_classic() +   theme(plot.title = element_text(size = 30,                                   margin=margin(0,0,20,0)),         plot.title.position = \"plot\") #> Scale for 'x' is already present. Adding another scale for 'x', which will #> replace the existing scale."},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqeplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence Entropy Plot — ggseqeplot","title":"Sequence Entropy Plot — ggseqeplot","text":"Function plotting development cross-sectional entropies across sequence positions ggplot2 instead base R's plot function used TraMineR::seqplot. TraMineR::seqHtplot group-specific entropy lines displayed common plot (just like TraMineRextras::seqplot.tentrop.","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqeplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence Entropy Plot — ggseqeplot","text":"","code":"ggseqeplot(   seqdata,   group = NULL,   weighted = TRUE,   with.missing = FALSE,   linewidth = 1 )"},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqeplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence Entropy Plot — ggseqeplot","text":"seqdata State sequence object (class stslist) created TraMineR::seqdef function. group grouping variable specified plot shows one line group weighted Controls weights (specified \\code\\link[TraMineR:seqdef]TraMineR::seqdef) used. Default TRUE, .e. available weights used .missing Specifies missing states considered computing entropy index (default FALSE). linewidth Specifies entropy line; default 1","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqeplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequence Entropy Plot — ggseqeplot","text":"line plot entropy values sequence position. stored object resulting list object also contains data (long format) used rendering plot","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqeplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequence Entropy Plot — ggseqeplot","text":"function uses TraMineR::seqstatd compute entropies. Obviously requires input data (seqdata) stored state sequence object (class stslist) created TraMineR::seqdef function.","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqeplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence Entropy Plot — ggseqeplot","text":"","code":"# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  # Examples from TraMineR::seqplot  library(TraMineR) library(ggplot2)  # actcal data set data(actcal)  # We use only a sample of 300 cases set.seed(1) actcal <- actcal[sample(nrow(actcal),300),] actcal.lab <- c(\"> 37 hours\", \"19-36 hours\", \"1-18 hours\", \"no work\") actcal.seq <- seqdef(actcal,13:24,labels=actcal.lab) #>  [>] 4 distinct states appear in the data:  #>      1 = A #>      2 = B #>      3 = C #>      4 = D #>  [>] state coding: #>        [alphabet]  [label]  [long label]  #>      1  A           A        > 37 hours #>      2  B           B        19-36 hours #>      3  C           C        1-18 hours #>      4  D           D        no work #>  [>] 300 sequences in the data set #>  [>] min/max sequence length: 12/12  # ex1 using weights data(ex1) ex1.seq <- seqdef(ex1, 1:13, weights=ex1$weights) #>  [>] found missing values ('NA') in sequence data #>  [>] preparing 7 sequences #>  [>] coding void elements with '%' and missing values with '*' #>  [!!] 1 empty sequence(s) with index: 7 #>       may produce inconsistent results. #>  [>] 4 distinct states appear in the data:  #>      1 = A #>      2 = B #>      3 = C #>      4 = D #>  [>] state coding: #>        [alphabet]  [label]  [long label]  #>      1  A           A        A #>      2  B           B        B #>      3  C           C        C #>      4  D           D        D #>  [>] sum of weights: 60 - min/max: 0/29.3 #>  [>] 7 sequences in the data set #>  [>] min/max sequence length: 0/13  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   # sequences sorted by age in 2000 and grouped by sex # with TraMineR::seqplot (entropies shown in two separate plots) seqHtplot(actcal.seq, group=actcal$sex)  # with ggseqplot (entropies shown in one plot) ggseqeplot(actcal.seq, group=actcal$sex)   # sequences of unequal length with missing state, and weights seqHtplot(ex1.seq)  ggseqeplot(ex1.seq)"},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqiplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence Index Plot — ggseqiplot","title":"Sequence Index Plot — ggseqiplot","text":"Function rendering sequence index plots ggplot2 (Wickham 2016)  instead base R's plot function used TraMineR::seqplot (Gabadinho et al. 2011) .","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqiplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence Index Plot — ggseqiplot","text":"","code":"ggseqiplot(   seqdata,   group = NULL,   sortv = NULL,   weighted = TRUE,   border = FALSE,   facet_scale = \"free_y\",   facet_ncol = NULL,   facet_nrow = NULL )"},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqiplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence Index Plot — ggseqiplot","text":"seqdata State sequence object (class stslist) created TraMineR::seqdef function. group Grouping variable length equal number sequences. NULL, distinct plot generated level group. sortv Vector numerical values sorting sequences sorting method (either \".start\" \".end\"). See details. weighted Controls weights (specified TraMineR::seqdef) used. Default TRUE, .e. available weights used border TRUE bars plotted black outline facet_scale Specifies y-scale faceted plot free (\"free_y\" default) \"fixed\" facet_ncol Number columns faceted (.e. grouped) plot facet_nrow Number rows faceted (.e. grouped) plot","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqiplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequence Index Plot — ggseqiplot","text":"sequence index plot. stored object resulting list object also contains data (spell format) used rendering plot.","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqiplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sequence Index Plot — ggseqiplot","text":"Sequence index plots introduced Scherer (2001)  display sequence horizontally stacked bar line. detailes discussion tpye sequence visualisation see, example, Brzinsky-Fay (2014) , Fasang Liao (2014) , Raab Struffolino (2022) . function uses TraMineR::seqformat reshape seqdata stored wide format spell/episode format. border=TRUE data reshaped long format, .e. every sequence row data represents one specific sequence position. example, 5 sequences length 10, long file 50 rows. case sequences unequal length every sequence contribute number rows long data. reshaped data used input rendering index plot using ggplot2's geom_rect. ggseqiplot uses geom_rect instead geom_tile allows straight forward implementation weights. weights specified seqdata weighted=TRUE sequence height corresponds weight. weights grouping variable used, facet_scale=\"fixed\" values y-axis labeled, ggplot2 reasonably allow varying scales facet scale fixed. sortv specified, sequences arranged order values. sortv=\".start\" sequence data sorted according states alphabet ascending order starting first sequence position, drawing succeeding positions case ties. Likewise, sortv=\".end\" sorts reversed version sequence data, starting final sequence position turning preceding positions case ties. Note default aspect ratio ggseqiplot different TraMineR::seqIplot. obvious border=TRUE. can change ratio either adding code ggseqiplot specifying ratio saving code ggsave.","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqiplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequence Index Plot — ggseqiplot","text":"Brzinsky-Fay C (2014). “Graphical Representation Transitions Sequences.” Blanchard P, B昼㹣hlmann F, Gauthier J (eds.), Advances Sequence Analysis: Theory, Method, Applications,  Life Course Research Social Policies, 265--284. Springer, Cham. doi: 10.1007/978-3-319-04969-4_14 . Fasang AE, Liao TF (2014). “Visualizing Sequences Social Sciences: Relative Frequency Sequence Plots.” Sociological Methods \\& Research, 43(4), 643--676. doi: 10.1177/0049124113506563 . Gabadinho , Ritschard G, M昼㹣ller NS, Studer M (2011). “Analyzing Visualizing State Sequences R TraMineR.” Journal Statistical Software, 40(4), 1--37. doi: 10.18637/jss.v040.i04 . Raab M, Struffolino E (2022). Sequence Analysis, volume 190 Quantitative Applications Social Sciences. SAGE, Thousand Oaks, CA. Scherer S (2001). “Early Career Patterns: Comparison Great Britain West Germany.” European Sociological Review, 17(2), 119--144. doi: 10.1093/esr/17.2.119 . Wickham H (2016). Ggplot2: Elegant Graphics Data Analysis,  Use R!, 2nd ed. 2016 edition. Springer, Cham. ISBN 978-3-319-24277-4, doi: 10.1007/978-3-319-24277-4 .","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqiplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequence Index Plot — ggseqiplot","text":"Marcel Raab","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqiplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence Index Plot — ggseqiplot","text":"","code":"# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  # Examples from TraMineR::seqplot  library(TraMineR)  # actcal data set data(actcal)  # We use only a sample of 300 cases set.seed(1) actcal <- actcal[sample(nrow(actcal),300),] actcal.lab <- c(\"> 37 hours\", \"19-36 hours\", \"1-18 hours\", \"no work\") actcal.seq <- seqdef(actcal,13:24,labels=actcal.lab) #>  [>] 4 distinct states appear in the data:  #>      1 = A #>      2 = B #>      3 = C #>      4 = D #>  [>] state coding: #>        [alphabet]  [label]  [long label]  #>      1  A           A        > 37 hours #>      2  B           B        19-36 hours #>      3  C           C        1-18 hours #>      4  D           D        no work #>  [>] 300 sequences in the data set #>  [>] min/max sequence length: 12/12  # ex1 using weights data(ex1) ex1.seq <- seqdef(ex1, 1:13, weights=ex1$weights) #>  [>] found missing values ('NA') in sequence data #>  [>] preparing 7 sequences #>  [>] coding void elements with '%' and missing values with '*' #>  [!!] 1 empty sequence(s) with index: 7 #>       may produce inconsistent results. #>  [>] 4 distinct states appear in the data:  #>      1 = A #>      2 = B #>      3 = C #>      4 = D #>  [>] state coding: #>        [alphabet]  [label]  [long label]  #>      1  A           A        A #>      2  B           B        B #>      3  C           C        C #>      4  D           D        D #>  [>] sum of weights: 60 - min/max: 0/29.3 #>  [>] 7 sequences in the data set #>  [>] min/max sequence length: 0/13  # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   # sequences sorted by age in 2000 and grouped by sex # with TraMineR::seqplot seqIplot(actcal.seq, group=actcal$sex,sortv=actcal$age00)  # with ggseqplot ggseqiplot(actcal.seq, group=actcal$sex, sortv=actcal$age00)   # sequences of unequal length with missing state, and weights seqIplot(ex1.seq)  ggseqiplot(ex1.seq)   # ... turn weights off and add border seqIplot(ex1.seq, weighted = FALSE, border = TRUE)  ggseqiplot(ex1.seq, weighted = FALSE, border = TRUE)"},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqplot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggseqplot: Render Sequence Plots using ggplot2 — ggseqplot-package","title":"ggseqplot: Render Sequence Plots using ggplot2 — ggseqplot-package","text":"library provides functions reproduce sequence plots TraMineR's seqplot using ggplot2. plots produced basis sequence object defined TraMineR::seqdef. package automates reshaping plotting sequence data.","code":""},{"path":[]},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqplot-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggseqplot: Render Sequence Plots using ggplot2 — ggseqplot-package","text":"Maintainer: Marcel Raab marcel.raab@gmail.com (ORCID)","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqrfplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Frequency Sequence Plot — ggseqrfplot","title":"Relative Frequency Sequence Plot — ggseqrfplot","text":"Function rendering sequence index plots ggplot2 instead base R's plot function used TraMineRextras::seqplot.rf. Note ggseqrfplot uses patchwork combine different components plot. details relative frequency sequence plots see documentation TraMineRextras::seqplot.rf.","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqrfplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Frequency Sequence Plot — ggseqrfplot","text":"","code":"ggseqrfplot(   seqdata,   k = floor(nrow(seqdata)/10),   diss,   sortv = NULL,   border = FALSE,   ylab = NULL,   yaxis = TRUE,   box.color = NULL,   box.fill = NULL,   box.alpha = NULL,   which.plot = \"both\",   quality = TRUE )"},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqrfplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Frequency Sequence Plot — ggseqrfplot","text":"seqdata State sequence object (class stslist) created TraMineR::seqdef function. k integer specifying number frequency groups diss pairwise dissimilarities sequences seqdata (see TraMineRextras::seqdist) sortv optional sorting variable may used compute frequency groups.  NULL (default), MDS used. Ties randomly ordered. border TRUE bars plotted black outline ylab character string specifying title y-axis. NULL axis title \"Frequency group\" yaxis Controls y-axis plotted. set TRUE, index frequency groups displayed. box.color specifies color boxplot borders; default \"black box.fill specifies fill color boxplots; default \"white\" box.alpha specifies alpha value boxplot fill color; default 1 .plot character string specifying components relative frequency sequence plot displayed. Default \"\". set \"medoids\" index plot medoids shown. \"diss..med\" box plots group-specific distances medoids shown. quality specifies representation quality shown figure caption; default TRUE","code":""},{"path":[]},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqrfplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative Frequency Sequence Plot — ggseqrfplot","text":"","code":"## From TraMineRextras::seqplot.rf library(TraMineR) library(TraMineRextras) #> TraMineRextras stable version 0.6.3 (Built: 2022-03-25) #> Functions provided by this package are still in test #>     and subject to changes in future releases. library(patchwork) library(ggplot2)  ## Defining a sequence object with the data in columns 10 to 25 ## (family status from age 15 to 30) in the biofam data set data(biofam) biofam.lab <- c(\"Parent\", \"Left\", \"Married\", \"Left+Marr\",                 \"Child\", \"Left+Child\", \"Left+Marr+Child\", \"Divorced\") ## Here, we use only 100 cases selected such that all elements ## of the alphabet be present. ## (More cases and a larger k would be necessary to get a meaningful example.) biofam.seq <- seqdef(biofam[501:600, ], 10:25, labels=biofam.lab) #>  [>] 8 distinct states appear in the data:  #>      1 = 0 #>      2 = 1 #>      3 = 2 #>      4 = 3 #>      5 = 4 #>      6 = 5 #>      7 = 6 #>      8 = 7 #>  [>] state coding: #>        [alphabet]  [label]  [long label]  #>      1  0           0        Parent #>      2  1           1        Left #>      3  2           2        Married #>      4  3           3        Left+Marr #>      5  4           4        Child #>      6  5           5        Left+Child #>      7  6           6        Left+Marr+Child #>      8  7           7        Divorced #>  [>] 100 sequences in the data set #>  [>] min/max sequence length: 16/16 diss <- seqdist(biofam.seq, method=\"LCS\") #>  [>] 100 sequences with 8 distinct states #>  [>] creating a 'sm' with a substitution cost of 2 #>  [>] creating 8x8 substitution-cost matrix using 2 as constant value #>  [>] 76 distinct  sequences  #>  [>] min/max sequence lengths: 16/16 #>  [>] computing distances using the LCS metric #>  [>] elapsed time: 0.02 secs   ## Using 12 groups and default MDS sorting ## ... with TraMineRextras::seqplot.rf seqplot.rf(biofam.seq, diss=diss, k=12) #>  [>] Using k=12 frequency groups #>  [>] Pseudo/median-based-R2: 0.5391125 #>  [>] Pseudo/median-based-F statistic: 9.357815   ## ... with ggseqrfplot ggseqrfplot(biofam.seq, diss=diss, k=12) #>  [>] Using k=12 frequency groups #>  [>] Pseudo/median-based-R2: 0.5391125 #>  [>] Pseudo/median-based-F statistic: 9.357815    ## With a user specified sorting variable ## Here time spent in parental home parentTime <- seqistatd(biofam.seq)[, 1] #>  [>] computing state distribution for 100 sequences ...  ## ... with TraMineRextras::seqplot.rf seqplot.rf(biofam.seq, diss=diss, k=12, sortv=parentTime,    main=\"Sorted by parent time\") #>  [>] Using k=12 frequency groups #>  [>] Pseudo/median-based-R2: 0.4499484 #>  [>] Pseudo/median-based-F statistic: 6.54409   ## ... with ggseqrfplot ggseqrfplot(biofam.seq, diss=diss, k=12, sortv=parentTime) +   plot_annotation(title = \"Sorted by parent time\",                   theme = theme(plot.title = element_text(hjust = 0.5,                                                           size = 18))) #>  [>] Using k=12 frequency groups #>  [>] Pseudo/median-based-R2: 0.4501548 #>  [>] Pseudo/median-based-F statistic: 6.54955"},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqtrplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence Transition Rate Plot — ggseqtrplot","title":"Sequence Transition Rate Plot — ggseqtrplot","text":"Function plotting transition rate matrix sequence states internally computed TraMineR::seqtrate (Gabadinho et al. 2011) . Plot generated using ggplot2 (Wickham 2016) .","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqtrplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence Transition Rate Plot — ggseqtrplot","text":"","code":"ggseqtrplot(   seqdata,   dss = TRUE,   group = NULL,   no.n = FALSE,   weighted = TRUE,   with.missing = FALSE,   axislabs = \"labels\",   x_n.dodge = 1,   facet_ncol = NULL,   facet_nrow = NULL )"},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqtrplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence Transition Rate Plot — ggseqtrplot","text":"seqdata State sequence object (class stslist) created TraMineR::seqdef function. dss specifies transition rates computed STS DSS (default) sequences group Grouping variable length equal number sequences. NULL, distinct plot generated level group. .n specifies number (weighted) sequences shown grouped (faceted) graph weighted Controls weights (specified TraMineR::seqdef) used. Default TRUE, .e. available weights used .missing Specifies missing state considered computing transition rates (default FALSE). axislabs specifies sequence object's long labels (default) state names alphabet attribute used. x_n.dodge allows print labels x-axis multiple rows avoid overlapping. facet_ncol Number columns faceted (.e. grouped) plot facet_nrow Number rows faceted (.e. grouped) plot","code":""},{"path":[]},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqtrplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sequence Transition Rate Plot — ggseqtrplot","text":"Gabadinho , Ritschard G, M昼㹣ller NS, Studer M (2011). “Analyzing Visualizing State Sequences R TraMineR.” Journal Statistical Software, 40(4), 1--37. doi: 10.18637/jss.v040.i04 . Wickham H (2016). Ggplot2: Elegant Graphics Data Analysis,  Use R!, 2nd ed. 2016 edition. Springer, Cham. ISBN 978-3-319-24277-4, doi: 10.1007/978-3-319-24277-4 .","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqtrplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sequence Transition Rate Plot — ggseqtrplot","text":"Marcel Raab","code":""},{"path":"https://maraab23.github.io/ggseqplot/reference/ggseqtrplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence Transition Rate Plot — ggseqtrplot","text":"","code":"# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  # Examples from TraMineR::seqplot  library(TraMineR)  # biofam data set data(biofam) # We use only a sample of 300 cases set.seed(10) biofam <- biofam[sample(nrow(biofam),300),] biofam.lab <- c(\"Parent\", \"Left\", \"Married\", \"Left+Marr\",                 \"Child\", \"Left+Child\", \"Left+Marr+Child\", \"Divorced\") biofam.seq <- seqdef(biofam, 10:25, labels=biofam.lab, weights = biofam$wp00tbgs) #>  [>] 8 distinct states appear in the data:  #>      1 = 0 #>      2 = 1 #>      3 = 2 #>      4 = 3 #>      5 = 4 #>      6 = 5 #>      7 = 6 #>      8 = 7 #>  [>] state coding: #>        [alphabet]  [label]  [long label]  #>      1  0           0        Parent #>      2  1           1        Left #>      3  2           2        Married #>      4  3           3        Left+Marr #>      5  4           4        Child #>      6  5           5        Left+Child #>      7  6           6        Left+Marr+Child #>      8  7           7        Divorced #>  [>] sum of weights: 330.07 - min/max: 0/6.02881860733032 #>  [>] 300 sequences in the data set #>  [>] min/max sequence length: 16/16   # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  # Basic transition rate plot (with adjusted x-axis labels) ggseqtrplot(biofam.seq, x_n.dodge = 2) #>  [>] computing transition probabilities for states 0/1/2/3/4/5/6/7 ... #> Joining, by = \"group\"   # Transition rate with group variable (with and without weights) ggseqtrplot(biofam.seq, group=biofam$sex, x_n.dodge = 2) #>  [>] computing transition probabilities for states 0/1/2/3/4/5/6/7 ... #>  [>] computing transition probabilities for states 0/1/2/3/4/5/6/7 ... #> Joining, by = \"group\"  ggseqtrplot(biofam.seq, group=biofam$sex, x_n.dodge = 2, weighted = FALSE) #>  [>] computing transition probabilities for states 0/1/2/3/4/5/6/7 ... #>  [>] computing transition probabilities for states 0/1/2/3/4/5/6/7 ... #> Joining, by = \"group\""}]
